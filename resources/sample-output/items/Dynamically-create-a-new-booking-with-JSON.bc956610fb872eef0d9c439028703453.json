{
  "name": "Dynamically create a new booking with JSON",
  "request": {
    "url": {
      "path": [
        "booking"
      ],
      "host": [
        "{{baseURL}}"
      ],
      "query": [],
      "variable": []
    },
    "header": [
      {
        "key": "Content-Type",
        "value": "application/json"
      }
    ],
    "method": "POST",
    "body": {
      "mode": "raw",
      "raw": "{\r\n\t\"firstname\" : {{first_name}},\r\n\t\"lastname\" : {{last_name}},\r\n\t\"totalprice\" : {{total_price}},\r\n\t\"depositpaid\" : {{depositPaid}},\r\n\t\"additionalneeds\" : {{additional_needs}},\r\n\t\"bookingdates\" : {\r\n\t\t\"checkin\" : {{check_in}},\r\n\t\t\"checkout\" : {{check_out}}\r\n\t}\r\n}"
    }
  },
  "response": [],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "pm.sendRequest(\"https://randomuser.me/api/\", (err, res) => {",
          "    var firstname = res.json().results[0].name.first",
          "    var lastname  = res.json().results[0].name.last",
          "    pm.environment.set(\"first_name\", JSON.stringify((_.capitalize(firstname))))",
          "    pm.environment.set(\"last_name\", JSON.stringify((_.capitalize(lastname))))",
          "})",
          "",
          "pm.environment.set(\"total_price\", _.random(0, 1000))",
          "",
          "const depositPaid = [true, false]",
          "pm.environment.set(\"depositPaid\", _.shuffle(depositPaid)[0])",
          "",
          "const moment = require('moment')",
          "pm.environment.set(\"check_in\", JSON.stringify(moment().format('YYYY-MM-DD')))",
          "pm.environment.set(\"check_out\", JSON.stringify(moment().add(_.random(1, 14), 'days').format('YYYY-MM-DD')))",
          "",
          "const items = [\"None\", \"Breakfast\", \"Lunch\", \"Dinner\", \"Late Checkout\", \"Newspaper\", \"Extra Pillow\"]",
          "pm.environment.set(\"additional_needs\", JSON.stringify(_.shuffle(items)[0]))"
        ]
      }
    },
    {
      "listen": "test",
      "script": {
        "type": "text/javascript",
        "exec": [
          "pm.test(\"Status code is 200\", () => pm.response.to.have.status(200))",
          "",
          "function cleanup() {",
          "    const clean = ['first_name', 'last_name', 'total_price', 'depositPaid', 'check_in', 'check_out', 'additional_needs']",
          "    for(let i = 0; i < clean.length; ++i){",
          "        pm.environment.unset(clean[i])",
          "    }",
          "}",
          "cleanup()",
          ""
        ]
      }
    }
  ]
}